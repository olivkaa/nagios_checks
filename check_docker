#!/bin/bash

function check_running_container {
	_group=`id nagios | grep docker`
	if [ -z "$_group" ]; then 
		echo "WARNING - Please make sure that nagios has access to docker"
		exit 1
	fi
	if [ -z "$_container" ]; then
		echo "Please enter a name of a container."
		help
	fi
	status=`docker container inspect $_container 2>/dev/null | grep -i "status" | sed -e 's/\"//g' | sed -e 's/\ //g' | cut -d":" -f2 | sed -e 's/\,//g'`
	#status=`docker container inspect $_container`
	case $status in
		"running")
		echo "OK | Container is up and running"
		exit 0
		;;
		"stopped")
		echo "WARNING | Container is not running"
		exit 1
		;;
		*)
		echo "$status | No container found"
		exit 3
		;;
	esac
	}

function check_container_updates {
	if [ -z "$_container" ]; then
                echo "Please enter a name of a container."
		help
        fi
	_updates=`docker exec -it $_container apt update | grep -i "upgradable" | cut -d"." -f1`

	if [ -z "$_updates" ]; then
		echo "OK | No updates available"
		exit 0
	else
		echo "WARNING | Check updates"
		exit 1
	fi
	}

function help() {
	echo "Help!"
	echo "Please choose the follwing options:"
	echo "-h | Shows this help"
	echo "-H | Set the host"
	echo "-c | Set the container to check"
	echo "-a | Check if container is active"
	echo "-u | Check the container for updates"
	echo "The options -a/-u require the option -c."
	exit 0
	}

while getopts "H:c:auh" opt; do
  case $opt in
     a)
     check_running_container
     ;;
     H)
     _host=$OPTARG >&2
     #echo $_host
     ;;
     c)
     _container=$OPTARG >&2
     #echo $_container
     ;;
     h)
     help
     ;;
     u)
     check_container_updates
     ;;
     \?)
     echo "Invalid option: -$OPTARG" >&2
     ;;
  esac
done

